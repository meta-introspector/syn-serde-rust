{
  "attrs": [
    {
      "style": "inner",
      "meta": {
        "name_value": {
          "path": {
            "segments": [
              {
                "ident": "doc"
              }
            ]
          },
          "value": {
            "lit": {
              "str": "\" A module to provide functions for Pickle <-> Rust serialize and deserialize.\""
            }
          }
        }
      }
    },
    {
      "style": "inner",
      "meta": {
        "list": {
          "path": {
            "segments": [
              {
                "ident": "allow"
              }
            ]
          },
          "delimiter": "paren",
          "tokens": [
            {
              "ident": "unreachable_pub"
            }
          ]
        }
      }
    }
  ],
  "items": [
    {
      "use": {
        "tree": {
          "path": {
            "ident": "std",
            "tree": {
              "ident": "io"
            }
          }
        }
      }
    },
    {
      "use": {
        "tree": {
          "path": {
            "ident": "serde_pickle",
            "tree": {
              "group": [
                {
                  "ident": "DeOptions"
                },
                {
                  "ident": "Result"
                },
                {
                  "ident": "SerOptions"
                }
              ]
            }
          }
        }
      }
    },
    {
      "use": {
        "tree": {
          "path": {
            "ident": "syn_serde",
            "tree": {
              "ident": "Syn"
            }
          }
        }
      }
    },
    {
      "fn": {
        "attrs": [
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" Serialize the given [`Syn`] type as a pickle byte vector.\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" This function is equivalent to the following code:\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # fn to_vec(syn_file: &syn::File) -> Vec<u8> {\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" use syn_serde::Syn;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" let serializable_file = syn_file.to_adapter();\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" serde_pickle::to_vec(&serializable_file, true).unwrap()\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # }\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          }
        ],
        "vis": "pub",
        "ident": "to_vec",
        "generics": {
          "params": [
            {
              "type": {
                "ident": "S"
              }
            }
          ],
          "where_clause": [
            {
              "type": {
                "bounded_ty": {
                  "path": {
                    "segments": [
                      {
                        "ident": "S"
                      }
                    ]
                  }
                },
                "bounds": [
                  {
                    "trait": {
                      "path": {
                        "segments": [
                          {
                            "ident": "Syn"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "inputs": [
          {
            "typed": {
              "pat": {
                "ident": {
                  "ident": "syn"
                }
              },
              "ty": {
                "reference": {
                  "elem": {
                    "path": {
                      "segments": [
                        {
                          "ident": "S"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "output": {
          "path": {
            "segments": [
              {
                "ident": "Vec",
                "arguments": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "path": {
                            "segments": [
                              {
                                "ident": "u8"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "stmts": [
          {
            "let": {
              "pat": {
                "ident": {
                  "ident": "adapter"
                }
              },
              "init": {
                "expr": {
                  "method_call": {
                    "receiver": {
                      "path": {
                        "segments": [
                          {
                            "ident": "syn"
                          }
                        ]
                      }
                    },
                    "method": "to_adapter",
                    "args": []
                  }
                }
              }
            }
          },
          {
            "expr": [
              {
                "method_call": {
                  "receiver": {
                    "call": {
                      "func": {
                        "path": {
                          "segments": [
                            {
                              "ident": "serde_pickle"
                            },
                            {
                              "ident": "to_vec"
                            }
                          ]
                        }
                      },
                      "args": [
                        {
                          "reference": {
                            "expr": {
                              "path": {
                                "segments": [
                                  {
                                    "ident": "adapter"
                                  }
                                ]
                              }
                            }
                          }
                        },
                        {
                          "call": {
                            "func": {
                              "path": {
                                "segments": [
                                  {
                                    "ident": "SerOptions"
                                  },
                                  {
                                    "ident": "default"
                                  }
                                ]
                              }
                            },
                            "args": []
                          }
                        }
                      ]
                    }
                  },
                  "method": "unwrap",
                  "args": []
                }
              },
              false
            ]
          }
        ]
      }
    },
    {
      "fn": {
        "attrs": [
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" Deserialize an instance of [`Syn`] type from an I/O stream of JSON.\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" This function is equivalent to the following code:\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # use std::io;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # fn from_reader<R: io::Read>(rdr: R) -> serde_pickle::Result<syn::File> {\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" use syn_serde::Syn;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" let serializable_file: <syn::File as Syn>::Adapter = serde_pickle::from_reader(rdr)?;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" let syn_file = syn::File::from_adapter(&serializable_file);\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" Ok(syn_file)\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # }\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "list": {
                "path": {
                  "segments": [
                    {
                      "ident": "allow"
                    }
                  ]
                },
                "delimiter": "paren",
                "tokens": [
                  {
                    "ident": "dead_code"
                  }
                ]
              }
            }
          }
        ],
        "vis": "pub",
        "ident": "from_reader",
        "generics": {
          "params": [
            {
              "type": {
                "ident": "S"
              }
            },
            {
              "type": {
                "ident": "R"
              }
            }
          ],
          "where_clause": [
            {
              "type": {
                "bounded_ty": {
                  "path": {
                    "segments": [
                      {
                        "ident": "S"
                      }
                    ]
                  }
                },
                "bounds": [
                  {
                    "trait": {
                      "path": {
                        "segments": [
                          {
                            "ident": "Syn"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            },
            {
              "type": {
                "bounded_ty": {
                  "path": {
                    "segments": [
                      {
                        "ident": "R"
                      }
                    ]
                  }
                },
                "bounds": [
                  {
                    "trait": {
                      "path": {
                        "segments": [
                          {
                            "ident": "io"
                          },
                          {
                            "ident": "Read"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "inputs": [
          {
            "typed": {
              "pat": {
                "ident": {
                  "ident": "rdr"
                }
              },
              "ty": {
                "path": {
                  "segments": [
                    {
                      "ident": "R"
                    }
                  ]
                }
              }
            }
          }
        ],
        "output": {
          "path": {
            "segments": [
              {
                "ident": "Result",
                "arguments": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "path": {
                            "segments": [
                              {
                                "ident": "S"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "stmts": [
          {
            "let": {
              "pat": {
                "type": {
                  "pat": {
                    "ident": {
                      "ident": "adapter"
                    }
                  },
                  "ty": {
                    "path": {
                      "segments": [
                        {
                          "ident": "S"
                        },
                        {
                          "ident": "Adapter"
                        }
                      ]
                    }
                  }
                }
              },
              "init": {
                "expr": {
                  "try": {
                    "expr": {
                      "call": {
                        "func": {
                          "path": {
                            "segments": [
                              {
                                "ident": "serde_pickle"
                              },
                              {
                                "ident": "from_reader"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "path": {
                              "segments": [
                                {
                                  "ident": "rdr"
                                }
                              ]
                            }
                          },
                          {
                            "call": {
                              "func": {
                                "path": {
                                  "segments": [
                                    {
                                      "ident": "DeOptions"
                                    },
                                    {
                                      "ident": "default"
                                    }
                                  ]
                                }
                              },
                              "args": []
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "expr": [
              {
                "call": {
                  "func": {
                    "path": {
                      "segments": [
                        {
                          "ident": "Ok"
                        }
                      ]
                    }
                  },
                  "args": [
                    {
                      "call": {
                        "func": {
                          "path": {
                            "segments": [
                              {
                                "ident": "S"
                              },
                              {
                                "ident": "from_adapter"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "reference": {
                              "expr": {
                                "path": {
                                  "segments": [
                                    {
                                      "ident": "adapter"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              false
            ]
          }
        ]
      }
    },
    {
      "fn": {
        "attrs": [
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" Deserialize an instance of [`Syn`] type from bytes of JSON text.\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" This function is equivalent to the following code:\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # fn from_reader(v: &[u8]) -> serde_pickle::Result<syn::File> {\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" use syn_serde::Syn;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\"\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" let serializable_file: <syn::File as Syn>::Adapter = serde_pickle::from_slice(v)?;\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" let syn_file = syn::File::from_adapter(&serializable_file);\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" Ok(syn_file)\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" # }\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "name_value": {
                "path": {
                  "segments": [
                    {
                      "ident": "doc"
                    }
                  ]
                },
                "value": {
                  "lit": {
                    "str": "\" ```\""
                  }
                }
              }
            }
          },
          {
            "style": "outer",
            "meta": {
              "list": {
                "path": {
                  "segments": [
                    {
                      "ident": "allow"
                    }
                  ]
                },
                "delimiter": "paren",
                "tokens": [
                  {
                    "ident": "dead_code"
                  }
                ]
              }
            }
          }
        ],
        "vis": "pub",
        "ident": "from_slice",
        "generics": {
          "params": [
            {
              "type": {
                "ident": "S"
              }
            }
          ],
          "where_clause": [
            {
              "type": {
                "bounded_ty": {
                  "path": {
                    "segments": [
                      {
                        "ident": "S"
                      }
                    ]
                  }
                },
                "bounds": [
                  {
                    "trait": {
                      "path": {
                        "segments": [
                          {
                            "ident": "Syn"
                          }
                        ]
                      }
                    }
                  }
                ]
              }
            }
          ]
        },
        "inputs": [
          {
            "typed": {
              "pat": {
                "ident": {
                  "ident": "v"
                }
              },
              "ty": {
                "reference": {
                  "elem": {
                    "slice": {
                      "elem": {
                        "path": {
                          "segments": [
                            {
                              "ident": "u8"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "output": {
          "path": {
            "segments": [
              {
                "ident": "Result",
                "arguments": {
                  "angle_bracketed": {
                    "args": [
                      {
                        "type": {
                          "path": {
                            "segments": [
                              {
                                "ident": "S"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ]
          }
        },
        "stmts": [
          {
            "let": {
              "pat": {
                "type": {
                  "pat": {
                    "ident": {
                      "ident": "adapter"
                    }
                  },
                  "ty": {
                    "path": {
                      "segments": [
                        {
                          "ident": "S"
                        },
                        {
                          "ident": "Adapter"
                        }
                      ]
                    }
                  }
                }
              },
              "init": {
                "expr": {
                  "try": {
                    "expr": {
                      "call": {
                        "func": {
                          "path": {
                            "segments": [
                              {
                                "ident": "serde_pickle"
                              },
                              {
                                "ident": "from_slice"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "path": {
                              "segments": [
                                {
                                  "ident": "v"
                                }
                              ]
                            }
                          },
                          {
                            "call": {
                              "func": {
                                "path": {
                                  "segments": [
                                    {
                                      "ident": "DeOptions"
                                    },
                                    {
                                      "ident": "default"
                                    }
                                  ]
                                }
                              },
                              "args": []
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "expr": [
              {
                "call": {
                  "func": {
                    "path": {
                      "segments": [
                        {
                          "ident": "Ok"
                        }
                      ]
                    }
                  },
                  "args": [
                    {
                      "call": {
                        "func": {
                          "path": {
                            "segments": [
                              {
                                "ident": "S"
                              },
                              {
                                "ident": "from_adapter"
                              }
                            ]
                          }
                        },
                        "args": [
                          {
                            "reference": {
                              "expr": {
                                "path": {
                                  "segments": [
                                    {
                                      "ident": "adapter"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  ]
                }
              },
              false
            ]
          }
        ]
      }
    }
  ]
}